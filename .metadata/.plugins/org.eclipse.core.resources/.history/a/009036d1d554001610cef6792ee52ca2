package com.vmware.game;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;

public class Main {
	public static void main(String[] args) throws IOException {
       String roots = SimpleRestClient.httpGet("http://localhost:8080/api/sector/3/roots", 200);
       String[] splitRoots = roots.split("\\n");
        Digraph<Integer> graph = new Digraph<Integer>();
//        for(String s : splitRoots){
//        	graph.add(Integer.parseInt(s));
//        }
        String nodes = SimpleRestClient.httpGet("http://localhost:8080/api/sector/3/objects", 200);
        String[] splitNodes = nodes.split("\\n");
        for(String s : splitNodes){
        	String[] tempSplit = s.split("\\s");
        	graph.add(Integer.parseInt(tempSplit[0]), Integer.parseInt(tempSplit[1]));
        }
        System.out.println(graph.toString());
//        for (int i = 0; i < splitRoots.length; i++) {
//        	if(graph.contains(Integer.parseInt(splitRoots[i]))){
//        		graph.neighbors.remove(splitRoots[i]);
//        	}
//		}
        /*0 -> [113, 503, 937, 557, 189]
    1 -> [716]
    2 -> []
    4 -> [917]
    5 -> [617]
    6 -> [73]
    7 -> []
    9 -> [58, 702, 95]
    11 -> [453]
    13 -> [816, 756]
    15 -> [145]
    16 -> [404, 516]
    18 -> [409, 634]*/
        //System.out.println(graph.toString());
//        LinkedHashMap<String, String> body = new LinkedHashMap<>();
//        body.put("trajectory", "0 1");
//        
//        String response = SimpleRestClient.httpPost("http://localhost:8080/api/sector/3/company/Radoka/trajectory", body, 200);
//	    System.out.println(response);
	}
}
